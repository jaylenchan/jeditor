@use 'sass:map';

$namespace: 'je';

/// 颜色基础库
$colors: () !default;
$colors: map.deep-merge(
  (
    brand: (
      1: #e8fff3,
      2: #b2f5d4,
      3: #80eaba,
      4: #52e0a4,
      5: #28d592,
      6: #00c881,
      7: #00aa74,
      8: #008c64,
      9: #006c51,
      10: #004d3c,
    ),
    warning: (
      1: #fff3e8,
      2: #fedcbf,
      3: #fcc298,
      4: #fea571,
      5: #fc8748,
      6: #fb6621,
      7: #cc4812,
      8: #a53109,
      9: #781f03,
      10: #4d0e00,
    ),
    error: (
      1: #ffede8,
      2: #ffd4c9,
      3: #ffb8aa,
      4: #ff9a8a,
      5: #ff796b,
      6: #ff584c,
      7: #c7312d,
      8: #a61919,
      9: #79090d,
      10: #4d0005,
    ),
    success: (
      1: #e8fff3,
      2: #b2f5d4,
      3: #80eaba,
      4: #52e0a4,
      5: #28d592,
      6: #00c881,
      7: #00aa74,
      8: #008c64,
      9: #006c51,
      10: #004d3c,
    ),
    gray: (
      1: #f4f6f9,
      2: #eceef3,
      3: #dbdee4,
      4: #ced2d9,
      5: #bec2cc,
      6: #a1a7b2,
      7: #828a99,
      8: #626773,
      9: #303540,
      10: #191d26,
    ),
    white: (
      1: #ffffff,
    ),
    black: (
      1: #000000,
    ),
  ),
  $colors
);

$types: brand, warning, error, success;
$states: (
  normal: 6,
  hover: 5,
  active: 7,
  disabled: 2,
  background: 1,
);

@function mapGetColors($color, $num) {
  @return map.get($colors, $color, $num);
}

$propColors: (
  background: (
    white: (
      primary: mapGetColors(white, 1),
    ),
    gray: (
      primary: mapGetColors(gray, 1),
      secondary: mapGetColors(gray, 2),
    ),
    black: (
      primary: mapGetColors(gray, 8),
      secondary: mapGetColors(gray, 10),
    ),
  ),
  text: (
    gray: (
      primary: mapGetColors(gray, 10),
      secondary: mapGetColors(gray, 8),
      tertiary: mapGetColors(gray, 6),
      disabled: mapGetColors(gray, 4),
    ),
    white: (
      primary: mapGetColors(white, 1),
    ),
    brand: (
      primary: mapGetColors(brand, 8),
    ),
  ),
  icon: (
    gray: (
      primary: mapGetColors(gray, 10),
      secondary: mapGetColors(gray, 8),
      tertiary: mapGetColors(gray, 6),
      quaternary: mapGetColors(gray, 4),
    ),
    white: (
      primary: mapGetColors(white, 1),
    ),
  ),
  fill: (
    white: (
      primary: mapGetColors(white, 1),
    ),
    gray: (
      primary: mapGetColors(gray, 1),
      secondary: mapGetColors(gray, 2),
      tertiary: mapGetColors(gray, 3),
      quaternary: mapGetColors(gray, 4),
    ),
  ),
  border: (
    gray: (
      primary: mapGetColors(gray, 1),
      secondary: mapGetColors(gray, 2),
      tertiary: mapGetColors(gray, 3),
    ),
    white: (
      primary: mapGetColors(white, 1),
    ),
  ),
  mask: (
    black: (
      primary: mapGetColors(black, 1),
    ),
    white: (
      primary: mapGetColors(white, 1),
    ),
  ),
);

/// 给定变量名成分，返回定制的变量名
/// $list: button,border-color;
/// genVarName($list) -> --je-button-border-color
@function genVarName($list) {
  $varName: '--' + $namespace;

  @each $item in $list {
    $varName: $varName + '-' + $item;
  }

  @return $varName;
}

/// 给定颜色类型和数字，返回定制的color变量名
/// $list: brand, 1
/// genColorVarName(brand, 1) -> --je-color-brand-1
@function genColorVarName($type, $num) {
  @return genVarName((color, $type, $num));
}

@function getColor($type, $num) {
  @return var(#{genColorVarName($type, $num)});
}

/// 给定$colors map，在:root中定义出相关的color var
@mixin define-color-vars($colors) {
  :root {
    @each $type, $typeColors in $colors {
      @each $num, $color in $typeColors {
        #{genColorVarName($type, $num)}: $color;
      }
    }
  }
}

/// 扩展颜色状态：hover，active，disabeld
@mixin extend-color-state($types, $states) {
  :root {
    @each $type in $types {
      @each $state, $num in $states {
        #{genVarName((color,$type,$state))}: map.get($colors, $type, $num);
      }
    }
  }
}

/// 扩展颜色属性：border，background，text等统一颜色
@mixin extend-color-prop($propColors) {
  :root {
    @each $type, $colors in $propColors {
      @each $colorType, $colorLevels in $colors {
        @each $level, $color in $colorLevels {
          #{genVarName((color,$type,$colorType,$level))}: $color;
        }
      }
    }
  }
}
